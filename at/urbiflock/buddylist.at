/**
 * AmbientTalk/2 Project
 * (c) Programming Technology Lab, 2006 - 2008
 * Authors: PROG Ambient Group
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

// stores the user's buddies, together with a cached profile of those buddies

def HashMap := jlobby.java.util.HashMap;

// the buddy list is a HashMap username:string -> profile:Profile

def makeBuddyList() {
	def map := HashMap.new();
	
	object: {
		def addProfile(profile) { map.put(profile.username, profile) };
		def removeProfile(uid) { map.remove(uid) };
		def getProfile(uid) { map.get(uid) };
		def setProfile(profile) { addProfile(profile) };
		def listUsernames() {
			def keyIt := map.keySet.iterator;
			def theList := [];
			while: { keyIt.hasNext } do: {
				theList := theList + [keyIt.next]
			};
			theList;
		};
		def listProfiles() {
			def valIt := map.values.iterator;
			def theList := [];
			while: { valIt.hasNext } do: {
				theList := theList + [valIt.next]
			};
			theList;
		};
	}
};

// the module object of this file
object: {
	// public stuff goes here
	
	def Test := extend: /.at.unit.test.UnitTest.new("BuddylistTest") with: {
		
		// unit tests go here
		
	};
	
};