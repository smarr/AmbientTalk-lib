/**
 * AmbientTalk/2 Project
 * (c) Programming Technology Lab, 2006 - 2007
 * Authors: Tom Van Cutsem & Stijn Mostinckx
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

/**
 * unit test for the basic programming tutorial chapter
 * @author tvcutsem
 */
extend: /.at.unit.test.UnitTest.new("BasicProgTutorial") with: {

		def testVariables() {
		  def x := 5;
		  self.assertEquals(5, x);
		  def y := x + 2;
		  self.assertEquals(7, y);
		  [x,y] := [y,x];
		  self.assertEquals(5,y);
		  self.assertEquals(7,x);
		};

        def testTables() {
          def z := 0;
          def t[5] { z := z + 1 };
          self.assertEquals("[1, 2, 3, 4, 5]", print: t);
        };
		
		def testFunctions() {
		  def square(x) { x*x };
		  self.assertEquals(25, square(5));
		  
		  def fac(n) {
			def inner(n, result) {
			   if: (n=0) then: { result } else: { inner( n-1, n * result)  }
			}; 
			inner(n,1)
	      };
	      self.assertEquals(120, fac(5));
		};
		
		def testBlockAssignment() {
		  def sum := 0;
		  sum := { | x, y| x + y };
		  self.assertEquals(3,sum(1,2));
		};

};