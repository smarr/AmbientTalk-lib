def PApplet := jlobby.processing.core.PApplet;
def TwitterWall := jlobby.edu.vub.at.twitterWall.processing.TwitterWall;

PApplet.main(["--present", "edu.vub.at.twitterWall.processing.TwitterWall"]);
def instance := TwitterWall.instance;


import /.at.lang.futures;
enableFutures(false);

network.online;

deftype TwitterWallUser;
def count := 0;
def users := /.at.collections.hashmap.HashMap.new();
def ids := /.at.collections.hashmap.HashMap.new();

whenever: TwitterWallUser discovered: {|user|
	count := count + 1;
	
	when: user<-getName()@FutureMessage becomes: {|name|
		when: user<-setId(count) becomes: { |ack|
			users.put(user, count);
			ids.put(count, user);
			instance.addUser(name, count);
		};
	};
	
	when: user disconnected: {
		instance.removeUser(users.get(user));
	};
};

deftype TwitterWallT;

def remoteWallInterface := object: {
	def receiveMessage(id, message) {
		if: (nil != ids.get(id)) then: {
			instance.addMessage(id, message);
		};
	};
};

export: remoteWallInterface as: TwitterWallT;