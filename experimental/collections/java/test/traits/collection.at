import /.experimental.collections.java.vector;
import ~.util;

def CollectionTestModule := object: {

	def CollectionTest := extend: /.at.unit.test.UnitTest.new("CollectionTest") with: {
	
		def [a, b, c, d, e] := [nil, nil, nil, nil, nil];
		
		def setUp() {
			def vt[5] { Vector.new() };
			[a, b, c, d, e] := vt;
		};
		
		def tearDown() {
			[a, b, c, d, e].each: { |v| v.clear() };
		};
			
		def testAdd() {
			self.assertTrue(a.add(1));
			self.assertEquals(a.size(), 1);
		};
		
		def testAddAll() {
			self.assertTrue(a.addAll([1,2,3,4,5]));
			self.assertEquals(a.size(), 5);
		};
		
		def testClear() {
			a := Vector.new([1,2,3,4,5]);
			a.clear();
			self.assertEquals(a.size(), 0);
		};
		
		def testContains() {
			self.assertFalse(a.contains(42));
			a.addAll([41,42,43]);
			self.assertTrue(a.contains(42));
		};
		
		def testContainsAll() {
			b.addAll([2,4,6]);
			a.addAll([7,6,5,4,3]);
			self.assertFalse(a.containsAll(b));
			a.add(2);
			self.assertTrue(a.containsAll(b));
		};
		
		def testEquals() {
			self.assertTrue(a.equals(a));
			self.assertFalse(a.equals(b));
		};
		
		def testIsEmpty() {
			self.assertTrue(a.isEmpty());
			a.add(42);
			self.assertFalse(a.isEmpty());
		};
		
		def testIterator() {
			a.addAll(["a", "b", "c"]);
			def it := a.iterator();
			it.next();
			self.assertEquals(it.next(), "b");
		};
		
		def testRemove() {
			a.addAll([1,2,3,4,5,6]);
			self.assertTrue(a.remove(3));
			self.assertEquals(a.size(), 5);
			self.assertFalse(a.remove(3));
			self.assertEquals(a.size(), 5);
		};
		
		def testRemoveAll() {
			b.addAll([2,4,6,8,42]);
			a.addAll([9,8,7,6,5,4,3,2,1]);
			self.assertTrue(a.removeAll(b));
			self.assertEquals(a.size(), 5);
			c.addAll([42,43,44]);
			self.assertFalse(a.removeAll(c));
		};
		
		def testRetainAll() {
			b.addAll([8,6,4,2,42]);
			a.addAll([1,2,3,4,5,6,7,8,9]);
			self.assertTrue(a.retainAll(b));
			self.assertEquals(a.size(), 4);
			self.assertFalse(a.retainAll(b));
		};
		
		def testToTable() {
			def t := [1,2,3,4,5,6];
			a.addAll(t);
			self.assertTrue(sameElementsInOrder(a.toTable(), t));
		};
		
		
	};
	
};

CollectionTestModule;
