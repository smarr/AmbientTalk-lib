/**
 * AmbientTalk/2 Project
 * (c) Software Languages Lab (2006-2010)
 * Authors: Eline Philips
 * 
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
 
 
deftype Activity;
deftype VarActivity <: Activity;
deftype OutputTag <: lobby.at.lang.types.Closure, lobby.at.lang.types.TypeTag;
deftype Trigger; // TODO added 
deftype Pattern;
deftype SyncPattern <: Pattern;
deftype Table;
def id := 0;
def groupId := 0;
deftype Variable;



def InitModule := object: {
    def Activity := Activity;
    def VarActivity := VarActivity;
    def Pattern := Pattern;
    def SyncPattern := SyncPattern;
    def OutputTag := OutputTag;
    def Trigger := Trigger;
    def Table := Table;
    def id := id;
    def groupId := groupId;
    def Variable := Variable;
};

